import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.tx.Contract;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.concurrent.Future;

/**
 * @author Tsikhan Kuprevich
 * @since 9/14/2017
 */
public class Greeter extends Contract {

    private static final String BINARY = "6060604052341561000f57600080fd5b6040516104f73803806104f7833981016040528080518201919050505b806000908051906020019061004292919061004a565b505b506100ef565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061008b57805160ff19168380011785556100b9565b828001600101855582156100b9579182015b828111156100b857825182559160200191906001019061009d565b5b5090506100c691906100ca565b5090565b6100ec91905b808211156100e85760008160009055506001016100d0565b5090565b90565b6103f9806100fe6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806376dbd10814610054578063a4136862146100cd578063cfae32171461012a575b600080fd5b341561005f57600080fd5b6100af600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506101b9565b60405180826000191660001916815260200191505060405180910390f35b34156100d857600080fd5b610128600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610250565b005b341561013557600080fd5b61013d61026b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561017e5780820151818401525b602081019050610162565b50505050905090810190601f1680156101ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60006002826000604051602001526040518082805190602001908083835b6020831015156101fd57805182525b6020820191506020810190506020830392506101d7565b6001836020036101000a03801982511681845116808217855250505050505090500191505060206040518083038160008661646e5a03f1151561023f57600080fd5b50506040518051905090505b919050565b8060009080519060200190610266929190610314565b505b50565b610273610394565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103095780601f106102de57610100808354040283529160200191610309565b820191906000526020600020905b8154815290600101906020018083116102ec57829003601f168201915b505050505090505b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061035557805160ff1916838001178555610383565b82800160010185558215610383579182015b82811115610382578251825591602001919060010190610367565b5b50905061039091906103a8565b5090565b602060405190810160405280600081525090565b6103ca91905b808211156103c65760008160009055506001016103ae565b5090565b905600a165627a7a72305820b301c872da668fbaf3fb16549e48f041fea56e22cc9e8a53966d64a534857bcf0029";

    public Greeter(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    public static Future<Greeter> deploy(
            Web3j web3j, Credentials credentials,
            BigInteger gasPrice, BigInteger gasLimit,
            BigInteger initialValue,
            Utf8String _greeting) {

        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(_greeting));

        return deployAsync(
                Greeter.class, web3j, credentials,
                gasPrice, gasLimit,
                BINARY, encodedConstructor, initialValue);
    }

    public static Greeter load(
            String contactAddress, Web3j web3j,
            Credentials credentials,
            BigInteger gasPrice, BigInteger gasLimit) {
        return new Greeter(
                contactAddress, web3j, credentials,
                gasPrice, gasLimit);
    }

    public Future<Utf8String> greet() {
        Function function = new Function("greet",
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {
                }));
        return executeCallSingleValueReturnAsync(function);
    }

}
